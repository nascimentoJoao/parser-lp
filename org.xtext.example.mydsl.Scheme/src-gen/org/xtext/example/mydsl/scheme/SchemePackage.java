/**
 * generated by Xtext 2.16.0
 */
package org.xtext.example.mydsl.scheme;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.scheme.SchemeFactory
 * @model kind="package"
 * @generated
 */
public interface SchemePackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "scheme";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/example/mydsl/Scheme";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "scheme";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  SchemePackage eINSTANCE = org.xtext.example.mydsl.scheme.impl.SchemePackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.ProgramImpl <em>Program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.ProgramImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getProgram()
   * @generated
   */
  int PROGRAM = 0;

  /**
   * The feature id for the '<em><b>Program</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__PROGRAM = 0;

  /**
   * The number of structural features of the '<em>Program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.FormImpl <em>Form</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.FormImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getForm()
   * @generated
   */
  int FORM = 1;

  /**
   * The feature id for the '<em><b>Definition</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORM__DEFINITION = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORM__EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Form</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.DefinitionImpl <em>Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.DefinitionImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getDefinition()
   * @generated
   */
  int DEFINITION = 2;

  /**
   * The feature id for the '<em><b>Variable Definition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION__VARIABLE_DEFINITION = 0;

  /**
   * The number of structural features of the '<em>Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.VariableDefinitionImpl <em>Variable Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.VariableDefinitionImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getVariableDefinition()
   * @generated
   */
  int VARIABLE_DEFINITION = 3;

  /**
   * The feature id for the '<em><b>Variable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DEFINITION__VARIABLE = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DEFINITION__EXPRESSION = 1;

  /**
   * The feature id for the '<em><b>Variables</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DEFINITION__VARIABLES = 2;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DEFINITION__BODY = 3;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DEFINITION__VAR = 4;

  /**
   * The number of structural features of the '<em>Variable Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DEFINITION_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.BodyImpl <em>Body</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.BodyImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getBody()
   * @generated
   */
  int BODY = 4;

  /**
   * The feature id for the '<em><b>Definition</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BODY__DEFINITION = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BODY__EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Body</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BODY_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.ExpressionImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 5;

  /**
   * The feature id for the '<em><b>Constant</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__CONSTANT = 0;

  /**
   * The feature id for the '<em><b>Oper</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__OPER = 1;

  /**
   * The feature id for the '<em><b>Cond</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__COND = 2;

  /**
   * The feature id for the '<em><b>Set</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__SET = 3;

  /**
   * The feature id for the '<em><b>App</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__APP = 4;

  /**
   * The feature id for the '<em><b>Mult</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__MULT = 5;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.ComparisonImpl <em>Comparison</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.ComparisonImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getComparison()
   * @generated
   */
  int COMPARISON = 6;

  /**
   * The feature id for the '<em><b>Num1</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__NUM1 = 0;

  /**
   * The feature id for the '<em><b>Num2</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__NUM2 = 1;

  /**
   * The number of structural features of the '<em>Comparison</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.MultipleConditionImpl <em>Multiple Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.MultipleConditionImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getMultipleCondition()
   * @generated
   */
  int MULTIPLE_CONDITION = 7;

  /**
   * The feature id for the '<em><b>Comp</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLE_CONDITION__COMP = 0;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLE_CONDITION__EXP = 1;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLE_CONDITION__EXPRESSION = 2;

  /**
   * The number of structural features of the '<em>Multiple Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLE_CONDITION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.ApplicationImpl <em>Application</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.ApplicationImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getApplication()
   * @generated
   */
  int APPLICATION = 8;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int APPLICATION__EXPRESSION = 0;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int APPLICATION__EXPRESSIONS = 1;

  /**
   * The number of structural features of the '<em>Application</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int APPLICATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.SetImpl <em>Set</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.SetImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getSet()
   * @generated
   */
  int SET = 9;

  /**
   * The feature id for the '<em><b>Cons</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET__CONS = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET__EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Set</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.ConditionalImpl <em>Conditional</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.ConditionalImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getConditional()
   * @generated
   */
  int CONDITIONAL = 10;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL__CONDITION = 0;

  /**
   * The feature id for the '<em><b>Iftrue</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL__IFTRUE = 1;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL__ELSE = 2;

  /**
   * The number of structural features of the '<em>Conditional</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.OperationImpl <em>Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.OperationImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getOperation()
   * @generated
   */
  int OPERATION = 11;

  /**
   * The feature id for the '<em><b>Operation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION__OPERATION = 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION__OPERATOR = 1;

  /**
   * The feature id for the '<em><b>Numb</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION__NUMB = 2;

  /**
   * The feature id for the '<em><b>Numb2</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION__NUMB2 = 3;

  /**
   * The number of structural features of the '<em>Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.IDschemeImpl <em>IDscheme</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.IDschemeImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getIDscheme()
   * @generated
   */
  int IDSCHEME = 12;

  /**
   * The feature id for the '<em><b>Init</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDSCHEME__INIT = 0;

  /**
   * The feature id for the '<em><b>Subs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDSCHEME__SUBS = 1;

  /**
   * The number of structural features of the '<em>IDscheme</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDSCHEME_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.InitialImpl <em>Initial</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.InitialImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getInitial()
   * @generated
   */
  int INITIAL = 13;

  /**
   * The feature id for the '<em><b>Init</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INITIAL__INIT = 0;

  /**
   * The number of structural features of the '<em>Initial</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INITIAL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.SubsequentImpl <em>Subsequent</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.SubsequentImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getSubsequent()
   * @generated
   */
  int SUBSEQUENT = 14;

  /**
   * The feature id for the '<em><b>Init</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBSEQUENT__INIT = 0;

  /**
   * The number of structural features of the '<em>Subsequent</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBSEQUENT_FEATURE_COUNT = 1;


  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Program <em>Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Program</em>'.
   * @see org.xtext.example.mydsl.scheme.Program
   * @generated
   */
  EClass getProgram();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.scheme.Program#getProgram <em>Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Program</em>'.
   * @see org.xtext.example.mydsl.scheme.Program#getProgram()
   * @see #getProgram()
   * @generated
   */
  EReference getProgram_Program();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Form <em>Form</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Form</em>'.
   * @see org.xtext.example.mydsl.scheme.Form
   * @generated
   */
  EClass getForm();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.scheme.Form#getDefinition <em>Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Definition</em>'.
   * @see org.xtext.example.mydsl.scheme.Form#getDefinition()
   * @see #getForm()
   * @generated
   */
  EReference getForm_Definition();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.scheme.Form#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.scheme.Form#getExpression()
   * @see #getForm()
   * @generated
   */
  EReference getForm_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Definition <em>Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Definition</em>'.
   * @see org.xtext.example.mydsl.scheme.Definition
   * @generated
   */
  EClass getDefinition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Definition#getVariableDefinition <em>Variable Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable Definition</em>'.
   * @see org.xtext.example.mydsl.scheme.Definition#getVariableDefinition()
   * @see #getDefinition()
   * @generated
   */
  EReference getDefinition_VariableDefinition();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.VariableDefinition <em>Variable Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Definition</em>'.
   * @see org.xtext.example.mydsl.scheme.VariableDefinition
   * @generated
   */
  EClass getVariableDefinition();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.VariableDefinition#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Variable</em>'.
   * @see org.xtext.example.mydsl.scheme.VariableDefinition#getVariable()
   * @see #getVariableDefinition()
   * @generated
   */
  EAttribute getVariableDefinition_Variable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.VariableDefinition#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.scheme.VariableDefinition#getExpression()
   * @see #getVariableDefinition()
   * @generated
   */
  EReference getVariableDefinition_Expression();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.scheme.VariableDefinition#getVariables <em>Variables</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Variables</em>'.
   * @see org.xtext.example.mydsl.scheme.VariableDefinition#getVariables()
   * @see #getVariableDefinition()
   * @generated
   */
  EAttribute getVariableDefinition_Variables();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.VariableDefinition#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see org.xtext.example.mydsl.scheme.VariableDefinition#getBody()
   * @see #getVariableDefinition()
   * @generated
   */
  EReference getVariableDefinition_Body();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.VariableDefinition#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var</em>'.
   * @see org.xtext.example.mydsl.scheme.VariableDefinition#getVar()
   * @see #getVariableDefinition()
   * @generated
   */
  EAttribute getVariableDefinition_Var();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Body <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Body</em>'.
   * @see org.xtext.example.mydsl.scheme.Body
   * @generated
   */
  EClass getBody();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.scheme.Body#getDefinition <em>Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Definition</em>'.
   * @see org.xtext.example.mydsl.scheme.Body#getDefinition()
   * @see #getBody()
   * @generated
   */
  EReference getBody_Definition();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.scheme.Body#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.scheme.Body#getExpression()
   * @see #getBody()
   * @generated
   */
  EReference getBody_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.scheme.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.Expression#getConstant <em>Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Constant</em>'.
   * @see org.xtext.example.mydsl.scheme.Expression#getConstant()
   * @see #getExpression()
   * @generated
   */
  EAttribute getExpression_Constant();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Expression#getOper <em>Oper</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Oper</em>'.
   * @see org.xtext.example.mydsl.scheme.Expression#getOper()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Oper();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Expression#getCond <em>Cond</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Cond</em>'.
   * @see org.xtext.example.mydsl.scheme.Expression#getCond()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Cond();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Expression#getSet <em>Set</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Set</em>'.
   * @see org.xtext.example.mydsl.scheme.Expression#getSet()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Set();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Expression#getApp <em>App</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>App</em>'.
   * @see org.xtext.example.mydsl.scheme.Expression#getApp()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_App();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Expression#getMult <em>Mult</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Mult</em>'.
   * @see org.xtext.example.mydsl.scheme.Expression#getMult()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Mult();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Comparison <em>Comparison</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Comparison</em>'.
   * @see org.xtext.example.mydsl.scheme.Comparison
   * @generated
   */
  EClass getComparison();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.Comparison#getNum1 <em>Num1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Num1</em>'.
   * @see org.xtext.example.mydsl.scheme.Comparison#getNum1()
   * @see #getComparison()
   * @generated
   */
  EAttribute getComparison_Num1();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.Comparison#getNum2 <em>Num2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Num2</em>'.
   * @see org.xtext.example.mydsl.scheme.Comparison#getNum2()
   * @see #getComparison()
   * @generated
   */
  EAttribute getComparison_Num2();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.MultipleCondition <em>Multiple Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiple Condition</em>'.
   * @see org.xtext.example.mydsl.scheme.MultipleCondition
   * @generated
   */
  EClass getMultipleCondition();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.scheme.MultipleCondition#getComp <em>Comp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Comp</em>'.
   * @see org.xtext.example.mydsl.scheme.MultipleCondition#getComp()
   * @see #getMultipleCondition()
   * @generated
   */
  EReference getMultipleCondition_Comp();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.scheme.MultipleCondition#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exp</em>'.
   * @see org.xtext.example.mydsl.scheme.MultipleCondition#getExp()
   * @see #getMultipleCondition()
   * @generated
   */
  EReference getMultipleCondition_Exp();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.MultipleCondition#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.scheme.MultipleCondition#getExpression()
   * @see #getMultipleCondition()
   * @generated
   */
  EReference getMultipleCondition_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Application <em>Application</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Application</em>'.
   * @see org.xtext.example.mydsl.scheme.Application
   * @generated
   */
  EClass getApplication();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Application#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.scheme.Application#getExpression()
   * @see #getApplication()
   * @generated
   */
  EReference getApplication_Expression();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.scheme.Application#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see org.xtext.example.mydsl.scheme.Application#getExpressions()
   * @see #getApplication()
   * @generated
   */
  EReference getApplication_Expressions();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Set <em>Set</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Set</em>'.
   * @see org.xtext.example.mydsl.scheme.Set
   * @generated
   */
  EClass getSet();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.Set#getCons <em>Cons</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Cons</em>'.
   * @see org.xtext.example.mydsl.scheme.Set#getCons()
   * @see #getSet()
   * @generated
   */
  EAttribute getSet_Cons();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Set#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.scheme.Set#getExpression()
   * @see #getSet()
   * @generated
   */
  EReference getSet_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Conditional <em>Conditional</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Conditional</em>'.
   * @see org.xtext.example.mydsl.scheme.Conditional
   * @generated
   */
  EClass getConditional();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Conditional#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see org.xtext.example.mydsl.scheme.Conditional#getCondition()
   * @see #getConditional()
   * @generated
   */
  EReference getConditional_Condition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Conditional#getIftrue <em>Iftrue</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Iftrue</em>'.
   * @see org.xtext.example.mydsl.scheme.Conditional#getIftrue()
   * @see #getConditional()
   * @generated
   */
  EReference getConditional_Iftrue();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Conditional#getElse <em>Else</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Else</em>'.
   * @see org.xtext.example.mydsl.scheme.Conditional#getElse()
   * @see #getConditional()
   * @generated
   */
  EReference getConditional_Else();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Operation <em>Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operation</em>'.
   * @see org.xtext.example.mydsl.scheme.Operation
   * @generated
   */
  EClass getOperation();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.Operation#getOperation <em>Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operation</em>'.
   * @see org.xtext.example.mydsl.scheme.Operation#getOperation()
   * @see #getOperation()
   * @generated
   */
  EAttribute getOperation_Operation();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.Operation#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see org.xtext.example.mydsl.scheme.Operation#getOperator()
   * @see #getOperation()
   * @generated
   */
  EAttribute getOperation_Operator();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.scheme.Operation#getNumb <em>Numb</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Numb</em>'.
   * @see org.xtext.example.mydsl.scheme.Operation#getNumb()
   * @see #getOperation()
   * @generated
   */
  EAttribute getOperation_Numb();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.scheme.Operation#getNumb2 <em>Numb2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Numb2</em>'.
   * @see org.xtext.example.mydsl.scheme.Operation#getNumb2()
   * @see #getOperation()
   * @generated
   */
  EAttribute getOperation_Numb2();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.IDscheme <em>IDscheme</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>IDscheme</em>'.
   * @see org.xtext.example.mydsl.scheme.IDscheme
   * @generated
   */
  EClass getIDscheme();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.IDscheme#getInit <em>Init</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Init</em>'.
   * @see org.xtext.example.mydsl.scheme.IDscheme#getInit()
   * @see #getIDscheme()
   * @generated
   */
  EReference getIDscheme_Init();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.scheme.IDscheme#getSubs <em>Subs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Subs</em>'.
   * @see org.xtext.example.mydsl.scheme.IDscheme#getSubs()
   * @see #getIDscheme()
   * @generated
   */
  EReference getIDscheme_Subs();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Initial <em>Initial</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Initial</em>'.
   * @see org.xtext.example.mydsl.scheme.Initial
   * @generated
   */
  EClass getInitial();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.Initial#getInit <em>Init</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Init</em>'.
   * @see org.xtext.example.mydsl.scheme.Initial#getInit()
   * @see #getInitial()
   * @generated
   */
  EAttribute getInitial_Init();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Subsequent <em>Subsequent</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Subsequent</em>'.
   * @see org.xtext.example.mydsl.scheme.Subsequent
   * @generated
   */
  EClass getSubsequent();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Subsequent#getInit <em>Init</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Init</em>'.
   * @see org.xtext.example.mydsl.scheme.Subsequent#getInit()
   * @see #getSubsequent()
   * @generated
   */
  EReference getSubsequent_Init();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  SchemeFactory getSchemeFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.ProgramImpl <em>Program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.ProgramImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getProgram()
     * @generated
     */
    EClass PROGRAM = eINSTANCE.getProgram();

    /**
     * The meta object literal for the '<em><b>Program</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__PROGRAM = eINSTANCE.getProgram_Program();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.FormImpl <em>Form</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.FormImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getForm()
     * @generated
     */
    EClass FORM = eINSTANCE.getForm();

    /**
     * The meta object literal for the '<em><b>Definition</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORM__DEFINITION = eINSTANCE.getForm_Definition();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORM__EXPRESSION = eINSTANCE.getForm_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.DefinitionImpl <em>Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.DefinitionImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getDefinition()
     * @generated
     */
    EClass DEFINITION = eINSTANCE.getDefinition();

    /**
     * The meta object literal for the '<em><b>Variable Definition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEFINITION__VARIABLE_DEFINITION = eINSTANCE.getDefinition_VariableDefinition();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.VariableDefinitionImpl <em>Variable Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.VariableDefinitionImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getVariableDefinition()
     * @generated
     */
    EClass VARIABLE_DEFINITION = eINSTANCE.getVariableDefinition();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_DEFINITION__VARIABLE = eINSTANCE.getVariableDefinition_Variable();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_DEFINITION__EXPRESSION = eINSTANCE.getVariableDefinition_Expression();

    /**
     * The meta object literal for the '<em><b>Variables</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_DEFINITION__VARIABLES = eINSTANCE.getVariableDefinition_Variables();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_DEFINITION__BODY = eINSTANCE.getVariableDefinition_Body();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_DEFINITION__VAR = eINSTANCE.getVariableDefinition_Var();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.BodyImpl <em>Body</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.BodyImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getBody()
     * @generated
     */
    EClass BODY = eINSTANCE.getBody();

    /**
     * The meta object literal for the '<em><b>Definition</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BODY__DEFINITION = eINSTANCE.getBody_Definition();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BODY__EXPRESSION = eINSTANCE.getBody_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.ExpressionImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '<em><b>Constant</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION__CONSTANT = eINSTANCE.getExpression_Constant();

    /**
     * The meta object literal for the '<em><b>Oper</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__OPER = eINSTANCE.getExpression_Oper();

    /**
     * The meta object literal for the '<em><b>Cond</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__COND = eINSTANCE.getExpression_Cond();

    /**
     * The meta object literal for the '<em><b>Set</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__SET = eINSTANCE.getExpression_Set();

    /**
     * The meta object literal for the '<em><b>App</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__APP = eINSTANCE.getExpression_App();

    /**
     * The meta object literal for the '<em><b>Mult</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__MULT = eINSTANCE.getExpression_Mult();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.ComparisonImpl <em>Comparison</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.ComparisonImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getComparison()
     * @generated
     */
    EClass COMPARISON = eINSTANCE.getComparison();

    /**
     * The meta object literal for the '<em><b>Num1</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPARISON__NUM1 = eINSTANCE.getComparison_Num1();

    /**
     * The meta object literal for the '<em><b>Num2</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPARISON__NUM2 = eINSTANCE.getComparison_Num2();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.MultipleConditionImpl <em>Multiple Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.MultipleConditionImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getMultipleCondition()
     * @generated
     */
    EClass MULTIPLE_CONDITION = eINSTANCE.getMultipleCondition();

    /**
     * The meta object literal for the '<em><b>Comp</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTIPLE_CONDITION__COMP = eINSTANCE.getMultipleCondition_Comp();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTIPLE_CONDITION__EXP = eINSTANCE.getMultipleCondition_Exp();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTIPLE_CONDITION__EXPRESSION = eINSTANCE.getMultipleCondition_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.ApplicationImpl <em>Application</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.ApplicationImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getApplication()
     * @generated
     */
    EClass APPLICATION = eINSTANCE.getApplication();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference APPLICATION__EXPRESSION = eINSTANCE.getApplication_Expression();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference APPLICATION__EXPRESSIONS = eINSTANCE.getApplication_Expressions();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.SetImpl <em>Set</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.SetImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getSet()
     * @generated
     */
    EClass SET = eINSTANCE.getSet();

    /**
     * The meta object literal for the '<em><b>Cons</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SET__CONS = eINSTANCE.getSet_Cons();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET__EXPRESSION = eINSTANCE.getSet_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.ConditionalImpl <em>Conditional</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.ConditionalImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getConditional()
     * @generated
     */
    EClass CONDITIONAL = eINSTANCE.getConditional();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITIONAL__CONDITION = eINSTANCE.getConditional_Condition();

    /**
     * The meta object literal for the '<em><b>Iftrue</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITIONAL__IFTRUE = eINSTANCE.getConditional_Iftrue();

    /**
     * The meta object literal for the '<em><b>Else</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITIONAL__ELSE = eINSTANCE.getConditional_Else();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.OperationImpl <em>Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.OperationImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getOperation()
     * @generated
     */
    EClass OPERATION = eINSTANCE.getOperation();

    /**
     * The meta object literal for the '<em><b>Operation</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATION__OPERATION = eINSTANCE.getOperation_Operation();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATION__OPERATOR = eINSTANCE.getOperation_Operator();

    /**
     * The meta object literal for the '<em><b>Numb</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATION__NUMB = eINSTANCE.getOperation_Numb();

    /**
     * The meta object literal for the '<em><b>Numb2</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATION__NUMB2 = eINSTANCE.getOperation_Numb2();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.IDschemeImpl <em>IDscheme</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.IDschemeImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getIDscheme()
     * @generated
     */
    EClass IDSCHEME = eINSTANCE.getIDscheme();

    /**
     * The meta object literal for the '<em><b>Init</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IDSCHEME__INIT = eINSTANCE.getIDscheme_Init();

    /**
     * The meta object literal for the '<em><b>Subs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IDSCHEME__SUBS = eINSTANCE.getIDscheme_Subs();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.InitialImpl <em>Initial</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.InitialImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getInitial()
     * @generated
     */
    EClass INITIAL = eINSTANCE.getInitial();

    /**
     * The meta object literal for the '<em><b>Init</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INITIAL__INIT = eINSTANCE.getInitial_Init();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.SubsequentImpl <em>Subsequent</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.SubsequentImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getSubsequent()
     * @generated
     */
    EClass SUBSEQUENT = eINSTANCE.getSubsequent();

    /**
     * The meta object literal for the '<em><b>Init</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUBSEQUENT__INIT = eINSTANCE.getSubsequent_Init();

  }

} //SchemePackage
