/**
 * generated by Xtext 2.16.0
 */
package org.xtext.example.mydsl.scheme;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.scheme.SchemeFactory
 * @model kind="package"
 * @generated
 */
public interface SchemePackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "scheme";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/example/mydsl/Scheme";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "scheme";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  SchemePackage eINSTANCE = org.xtext.example.mydsl.scheme.impl.SchemePackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.ProgramImpl <em>Program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.ProgramImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getProgram()
   * @generated
   */
  int PROGRAM = 0;

  /**
   * The feature id for the '<em><b>Program</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__PROGRAM = 0;

  /**
   * The number of structural features of the '<em>Program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.DefinitionImpl <em>Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.DefinitionImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getDefinition()
   * @generated
   */
  int DEFINITION = 1;

  /**
   * The feature id for the '<em><b>Cons</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION__CONS = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION__EXPRESSION = 1;

  /**
   * The feature id for the '<em><b>Variable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION__VARIABLE = 2;

  /**
   * The feature id for the '<em><b>Variables</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION__VARIABLES = 3;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION__BODY = 4;

  /**
   * The number of structural features of the '<em>Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.BodyImpl <em>Body</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.BodyImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getBody()
   * @generated
   */
  int BODY = 2;

  /**
   * The feature id for the '<em><b>Definition</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BODY__DEFINITION = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BODY__EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Body</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BODY_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.ExpressionImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 3;

  /**
   * The feature id for the '<em><b>Constant</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__CONSTANT = 0;

  /**
   * The feature id for the '<em><b>Oper</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__OPER = 1;

  /**
   * The feature id for the '<em><b>Comp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__COMP = 2;

  /**
   * The feature id for the '<em><b>Cond</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__COND = 3;

  /**
   * The feature id for the '<em><b>Set</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__SET = 4;

  /**
   * The feature id for the '<em><b>Trig</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__TRIG = 5;

  /**
   * The feature id for the '<em><b>List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__LIST = 6;

  /**
   * The feature id for the '<em><b>List Length</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__LIST_LENGTH = 7;

  /**
   * The feature id for the '<em><b>Nested Operation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__NESTED_OPERATION = 8;

  /**
   * The feature id for the '<em><b>Calculate</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__CALCULATE = 9;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 10;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.ComparisonImpl <em>Comparison</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.ComparisonImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getComparison()
   * @generated
   */
  int COMPARISON = 4;

  /**
   * The feature id for the '<em><b>Num1</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__NUM1 = 0;

  /**
   * The feature id for the '<em><b>Num2</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__NUM2 = 1;

  /**
   * The number of structural features of the '<em>Comparison</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.TrigonometryImpl <em>Trigonometry</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.TrigonometryImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getTrigonometry()
   * @generated
   */
  int TRIGONOMETRY = 5;

  /**
   * The feature id for the '<em><b>Trig</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRIGONOMETRY__TRIG = 0;

  /**
   * The feature id for the '<em><b>Numb</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRIGONOMETRY__NUMB = 1;

  /**
   * The number of structural features of the '<em>Trigonometry</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRIGONOMETRY_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.SetImpl <em>Set</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.SetImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getSet()
   * @generated
   */
  int SET = 6;

  /**
   * The feature id for the '<em><b>Cons</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET__CONS = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET__EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Set</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.ConditionalImpl <em>Conditional</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.ConditionalImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getConditional()
   * @generated
   */
  int CONDITIONAL = 7;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL__CONDITION = 0;

  /**
   * The feature id for the '<em><b>Iftrue</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL__IFTRUE = 1;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL__ELSE = 2;

  /**
   * The number of structural features of the '<em>Conditional</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.NestedOperationImpl <em>Nested Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.NestedOperationImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getNestedOperation()
   * @generated
   */
  int NESTED_OPERATION = 8;

  /**
   * The feature id for the '<em><b>Nested Operation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NESTED_OPERATION__NESTED_OPERATION = 0;

  /**
   * The feature id for the '<em><b>Calculate</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NESTED_OPERATION__CALCULATE = 1;

  /**
   * The feature id for the '<em><b>Operation</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NESTED_OPERATION__OPERATION = 2;

  /**
   * The number of structural features of the '<em>Nested Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NESTED_OPERATION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.OperationImpl <em>Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.OperationImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getOperation()
   * @generated
   */
  int OPERATION = 9;

  /**
   * The feature id for the '<em><b>Operation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION__OPERATION = 0;

  /**
   * The feature id for the '<em><b>Calculate</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION__CALCULATE = 1;

  /**
   * The number of structural features of the '<em>Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.CalculateImpl <em>Calculate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.CalculateImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getCalculate()
   * @generated
   */
  int CALCULATE = 10;

  /**
   * The feature id for the '<em><b>Calculate</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALCULATE__CALCULATE = 0;

  /**
   * The feature id for the '<em><b>Numb</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALCULATE__NUMB = 1;

  /**
   * The number of structural features of the '<em>Calculate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALCULATE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.ListNumbersImpl <em>List Numbers</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.ListNumbersImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getListNumbers()
   * @generated
   */
  int LIST_NUMBERS = 11;

  /**
   * The feature id for the '<em><b>Number</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_NUMBERS__NUMBER = 0;

  /**
   * The number of structural features of the '<em>List Numbers</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_NUMBERS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.scheme.impl.ListLengthImpl <em>List Length</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.scheme.impl.ListLengthImpl
   * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getListLength()
   * @generated
   */
  int LIST_LENGTH = 12;

  /**
   * The feature id for the '<em><b>List Numbers</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_LENGTH__LIST_NUMBERS = 0;

  /**
   * The number of structural features of the '<em>List Length</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_LENGTH_FEATURE_COUNT = 1;


  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Program <em>Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Program</em>'.
   * @see org.xtext.example.mydsl.scheme.Program
   * @generated
   */
  EClass getProgram();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.scheme.Program#getProgram <em>Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Program</em>'.
   * @see org.xtext.example.mydsl.scheme.Program#getProgram()
   * @see #getProgram()
   * @generated
   */
  EReference getProgram_Program();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Definition <em>Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Definition</em>'.
   * @see org.xtext.example.mydsl.scheme.Definition
   * @generated
   */
  EClass getDefinition();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.Definition#getCons <em>Cons</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Cons</em>'.
   * @see org.xtext.example.mydsl.scheme.Definition#getCons()
   * @see #getDefinition()
   * @generated
   */
  EAttribute getDefinition_Cons();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Definition#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.scheme.Definition#getExpression()
   * @see #getDefinition()
   * @generated
   */
  EReference getDefinition_Expression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.Definition#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Variable</em>'.
   * @see org.xtext.example.mydsl.scheme.Definition#getVariable()
   * @see #getDefinition()
   * @generated
   */
  EAttribute getDefinition_Variable();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.scheme.Definition#getVariables <em>Variables</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Variables</em>'.
   * @see org.xtext.example.mydsl.scheme.Definition#getVariables()
   * @see #getDefinition()
   * @generated
   */
  EAttribute getDefinition_Variables();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Definition#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see org.xtext.example.mydsl.scheme.Definition#getBody()
   * @see #getDefinition()
   * @generated
   */
  EReference getDefinition_Body();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Body <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Body</em>'.
   * @see org.xtext.example.mydsl.scheme.Body
   * @generated
   */
  EClass getBody();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.scheme.Body#getDefinition <em>Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Definition</em>'.
   * @see org.xtext.example.mydsl.scheme.Body#getDefinition()
   * @see #getBody()
   * @generated
   */
  EReference getBody_Definition();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.scheme.Body#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.scheme.Body#getExpression()
   * @see #getBody()
   * @generated
   */
  EReference getBody_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.scheme.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.Expression#getConstant <em>Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Constant</em>'.
   * @see org.xtext.example.mydsl.scheme.Expression#getConstant()
   * @see #getExpression()
   * @generated
   */
  EAttribute getExpression_Constant();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Expression#getOper <em>Oper</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Oper</em>'.
   * @see org.xtext.example.mydsl.scheme.Expression#getOper()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Oper();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Expression#getComp <em>Comp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Comp</em>'.
   * @see org.xtext.example.mydsl.scheme.Expression#getComp()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Comp();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Expression#getCond <em>Cond</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Cond</em>'.
   * @see org.xtext.example.mydsl.scheme.Expression#getCond()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Cond();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Expression#getSet <em>Set</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Set</em>'.
   * @see org.xtext.example.mydsl.scheme.Expression#getSet()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Set();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Expression#getTrig <em>Trig</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Trig</em>'.
   * @see org.xtext.example.mydsl.scheme.Expression#getTrig()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Trig();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Expression#getList <em>List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>List</em>'.
   * @see org.xtext.example.mydsl.scheme.Expression#getList()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_List();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Expression#getListLength <em>List Length</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>List Length</em>'.
   * @see org.xtext.example.mydsl.scheme.Expression#getListLength()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_ListLength();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Expression#getNestedOperation <em>Nested Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Nested Operation</em>'.
   * @see org.xtext.example.mydsl.scheme.Expression#getNestedOperation()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_NestedOperation();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Expression#getCalculate <em>Calculate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Calculate</em>'.
   * @see org.xtext.example.mydsl.scheme.Expression#getCalculate()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Calculate();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Comparison <em>Comparison</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Comparison</em>'.
   * @see org.xtext.example.mydsl.scheme.Comparison
   * @generated
   */
  EClass getComparison();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.Comparison#getNum1 <em>Num1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Num1</em>'.
   * @see org.xtext.example.mydsl.scheme.Comparison#getNum1()
   * @see #getComparison()
   * @generated
   */
  EAttribute getComparison_Num1();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.Comparison#getNum2 <em>Num2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Num2</em>'.
   * @see org.xtext.example.mydsl.scheme.Comparison#getNum2()
   * @see #getComparison()
   * @generated
   */
  EAttribute getComparison_Num2();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Trigonometry <em>Trigonometry</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Trigonometry</em>'.
   * @see org.xtext.example.mydsl.scheme.Trigonometry
   * @generated
   */
  EClass getTrigonometry();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.Trigonometry#getTrig <em>Trig</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Trig</em>'.
   * @see org.xtext.example.mydsl.scheme.Trigonometry#getTrig()
   * @see #getTrigonometry()
   * @generated
   */
  EAttribute getTrigonometry_Trig();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.scheme.Trigonometry#getNumb <em>Numb</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Numb</em>'.
   * @see org.xtext.example.mydsl.scheme.Trigonometry#getNumb()
   * @see #getTrigonometry()
   * @generated
   */
  EAttribute getTrigonometry_Numb();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Set <em>Set</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Set</em>'.
   * @see org.xtext.example.mydsl.scheme.Set
   * @generated
   */
  EClass getSet();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.Set#getCons <em>Cons</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Cons</em>'.
   * @see org.xtext.example.mydsl.scheme.Set#getCons()
   * @see #getSet()
   * @generated
   */
  EAttribute getSet_Cons();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Set#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.scheme.Set#getExpression()
   * @see #getSet()
   * @generated
   */
  EReference getSet_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Conditional <em>Conditional</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Conditional</em>'.
   * @see org.xtext.example.mydsl.scheme.Conditional
   * @generated
   */
  EClass getConditional();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Conditional#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see org.xtext.example.mydsl.scheme.Conditional#getCondition()
   * @see #getConditional()
   * @generated
   */
  EReference getConditional_Condition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Conditional#getIftrue <em>Iftrue</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Iftrue</em>'.
   * @see org.xtext.example.mydsl.scheme.Conditional#getIftrue()
   * @see #getConditional()
   * @generated
   */
  EReference getConditional_Iftrue();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.scheme.Conditional#getElse <em>Else</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Else</em>'.
   * @see org.xtext.example.mydsl.scheme.Conditional#getElse()
   * @see #getConditional()
   * @generated
   */
  EReference getConditional_Else();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.NestedOperation <em>Nested Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Nested Operation</em>'.
   * @see org.xtext.example.mydsl.scheme.NestedOperation
   * @generated
   */
  EClass getNestedOperation();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.NestedOperation#getNestedOperation <em>Nested Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Nested Operation</em>'.
   * @see org.xtext.example.mydsl.scheme.NestedOperation#getNestedOperation()
   * @see #getNestedOperation()
   * @generated
   */
  EAttribute getNestedOperation_NestedOperation();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.scheme.NestedOperation#getCalculate <em>Calculate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Calculate</em>'.
   * @see org.xtext.example.mydsl.scheme.NestedOperation#getCalculate()
   * @see #getNestedOperation()
   * @generated
   */
  EReference getNestedOperation_Calculate();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.scheme.NestedOperation#getOperation <em>Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Operation</em>'.
   * @see org.xtext.example.mydsl.scheme.NestedOperation#getOperation()
   * @see #getNestedOperation()
   * @generated
   */
  EReference getNestedOperation_Operation();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Operation <em>Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operation</em>'.
   * @see org.xtext.example.mydsl.scheme.Operation
   * @generated
   */
  EClass getOperation();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.Operation#getOperation <em>Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operation</em>'.
   * @see org.xtext.example.mydsl.scheme.Operation#getOperation()
   * @see #getOperation()
   * @generated
   */
  EAttribute getOperation_Operation();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.scheme.Operation#getCalculate <em>Calculate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Calculate</em>'.
   * @see org.xtext.example.mydsl.scheme.Operation#getCalculate()
   * @see #getOperation()
   * @generated
   */
  EReference getOperation_Calculate();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.Calculate <em>Calculate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Calculate</em>'.
   * @see org.xtext.example.mydsl.scheme.Calculate
   * @generated
   */
  EClass getCalculate();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.scheme.Calculate#getCalculate <em>Calculate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Calculate</em>'.
   * @see org.xtext.example.mydsl.scheme.Calculate#getCalculate()
   * @see #getCalculate()
   * @generated
   */
  EAttribute getCalculate_Calculate();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.scheme.Calculate#getNumb <em>Numb</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Numb</em>'.
   * @see org.xtext.example.mydsl.scheme.Calculate#getNumb()
   * @see #getCalculate()
   * @generated
   */
  EAttribute getCalculate_Numb();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.ListNumbers <em>List Numbers</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>List Numbers</em>'.
   * @see org.xtext.example.mydsl.scheme.ListNumbers
   * @generated
   */
  EClass getListNumbers();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.scheme.ListNumbers#getNumber <em>Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Number</em>'.
   * @see org.xtext.example.mydsl.scheme.ListNumbers#getNumber()
   * @see #getListNumbers()
   * @generated
   */
  EAttribute getListNumbers_Number();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.scheme.ListLength <em>List Length</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>List Length</em>'.
   * @see org.xtext.example.mydsl.scheme.ListLength
   * @generated
   */
  EClass getListLength();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.scheme.ListLength#getListNumbers <em>List Numbers</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>List Numbers</em>'.
   * @see org.xtext.example.mydsl.scheme.ListLength#getListNumbers()
   * @see #getListLength()
   * @generated
   */
  EReference getListLength_ListNumbers();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  SchemeFactory getSchemeFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.ProgramImpl <em>Program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.ProgramImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getProgram()
     * @generated
     */
    EClass PROGRAM = eINSTANCE.getProgram();

    /**
     * The meta object literal for the '<em><b>Program</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__PROGRAM = eINSTANCE.getProgram_Program();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.DefinitionImpl <em>Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.DefinitionImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getDefinition()
     * @generated
     */
    EClass DEFINITION = eINSTANCE.getDefinition();

    /**
     * The meta object literal for the '<em><b>Cons</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DEFINITION__CONS = eINSTANCE.getDefinition_Cons();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEFINITION__EXPRESSION = eINSTANCE.getDefinition_Expression();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DEFINITION__VARIABLE = eINSTANCE.getDefinition_Variable();

    /**
     * The meta object literal for the '<em><b>Variables</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DEFINITION__VARIABLES = eINSTANCE.getDefinition_Variables();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEFINITION__BODY = eINSTANCE.getDefinition_Body();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.BodyImpl <em>Body</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.BodyImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getBody()
     * @generated
     */
    EClass BODY = eINSTANCE.getBody();

    /**
     * The meta object literal for the '<em><b>Definition</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BODY__DEFINITION = eINSTANCE.getBody_Definition();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BODY__EXPRESSION = eINSTANCE.getBody_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.ExpressionImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '<em><b>Constant</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION__CONSTANT = eINSTANCE.getExpression_Constant();

    /**
     * The meta object literal for the '<em><b>Oper</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__OPER = eINSTANCE.getExpression_Oper();

    /**
     * The meta object literal for the '<em><b>Comp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__COMP = eINSTANCE.getExpression_Comp();

    /**
     * The meta object literal for the '<em><b>Cond</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__COND = eINSTANCE.getExpression_Cond();

    /**
     * The meta object literal for the '<em><b>Set</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__SET = eINSTANCE.getExpression_Set();

    /**
     * The meta object literal for the '<em><b>Trig</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__TRIG = eINSTANCE.getExpression_Trig();

    /**
     * The meta object literal for the '<em><b>List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__LIST = eINSTANCE.getExpression_List();

    /**
     * The meta object literal for the '<em><b>List Length</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__LIST_LENGTH = eINSTANCE.getExpression_ListLength();

    /**
     * The meta object literal for the '<em><b>Nested Operation</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__NESTED_OPERATION = eINSTANCE.getExpression_NestedOperation();

    /**
     * The meta object literal for the '<em><b>Calculate</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__CALCULATE = eINSTANCE.getExpression_Calculate();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.ComparisonImpl <em>Comparison</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.ComparisonImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getComparison()
     * @generated
     */
    EClass COMPARISON = eINSTANCE.getComparison();

    /**
     * The meta object literal for the '<em><b>Num1</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPARISON__NUM1 = eINSTANCE.getComparison_Num1();

    /**
     * The meta object literal for the '<em><b>Num2</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPARISON__NUM2 = eINSTANCE.getComparison_Num2();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.TrigonometryImpl <em>Trigonometry</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.TrigonometryImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getTrigonometry()
     * @generated
     */
    EClass TRIGONOMETRY = eINSTANCE.getTrigonometry();

    /**
     * The meta object literal for the '<em><b>Trig</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRIGONOMETRY__TRIG = eINSTANCE.getTrigonometry_Trig();

    /**
     * The meta object literal for the '<em><b>Numb</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRIGONOMETRY__NUMB = eINSTANCE.getTrigonometry_Numb();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.SetImpl <em>Set</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.SetImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getSet()
     * @generated
     */
    EClass SET = eINSTANCE.getSet();

    /**
     * The meta object literal for the '<em><b>Cons</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SET__CONS = eINSTANCE.getSet_Cons();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET__EXPRESSION = eINSTANCE.getSet_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.ConditionalImpl <em>Conditional</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.ConditionalImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getConditional()
     * @generated
     */
    EClass CONDITIONAL = eINSTANCE.getConditional();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITIONAL__CONDITION = eINSTANCE.getConditional_Condition();

    /**
     * The meta object literal for the '<em><b>Iftrue</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITIONAL__IFTRUE = eINSTANCE.getConditional_Iftrue();

    /**
     * The meta object literal for the '<em><b>Else</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITIONAL__ELSE = eINSTANCE.getConditional_Else();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.NestedOperationImpl <em>Nested Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.NestedOperationImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getNestedOperation()
     * @generated
     */
    EClass NESTED_OPERATION = eINSTANCE.getNestedOperation();

    /**
     * The meta object literal for the '<em><b>Nested Operation</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NESTED_OPERATION__NESTED_OPERATION = eINSTANCE.getNestedOperation_NestedOperation();

    /**
     * The meta object literal for the '<em><b>Calculate</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NESTED_OPERATION__CALCULATE = eINSTANCE.getNestedOperation_Calculate();

    /**
     * The meta object literal for the '<em><b>Operation</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NESTED_OPERATION__OPERATION = eINSTANCE.getNestedOperation_Operation();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.OperationImpl <em>Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.OperationImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getOperation()
     * @generated
     */
    EClass OPERATION = eINSTANCE.getOperation();

    /**
     * The meta object literal for the '<em><b>Operation</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATION__OPERATION = eINSTANCE.getOperation_Operation();

    /**
     * The meta object literal for the '<em><b>Calculate</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATION__CALCULATE = eINSTANCE.getOperation_Calculate();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.CalculateImpl <em>Calculate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.CalculateImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getCalculate()
     * @generated
     */
    EClass CALCULATE = eINSTANCE.getCalculate();

    /**
     * The meta object literal for the '<em><b>Calculate</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CALCULATE__CALCULATE = eINSTANCE.getCalculate_Calculate();

    /**
     * The meta object literal for the '<em><b>Numb</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CALCULATE__NUMB = eINSTANCE.getCalculate_Numb();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.ListNumbersImpl <em>List Numbers</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.ListNumbersImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getListNumbers()
     * @generated
     */
    EClass LIST_NUMBERS = eINSTANCE.getListNumbers();

    /**
     * The meta object literal for the '<em><b>Number</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LIST_NUMBERS__NUMBER = eINSTANCE.getListNumbers_Number();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.scheme.impl.ListLengthImpl <em>List Length</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.scheme.impl.ListLengthImpl
     * @see org.xtext.example.mydsl.scheme.impl.SchemePackageImpl#getListLength()
     * @generated
     */
    EClass LIST_LENGTH = eINSTANCE.getListLength();

    /**
     * The meta object literal for the '<em><b>List Numbers</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LIST_LENGTH__LIST_NUMBERS = eINSTANCE.getListLength_ListNumbers();

  }

} //SchemePackage
