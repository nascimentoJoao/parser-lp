/**
 * generated by Xtext 2.16.0
 */
package org.xtext.example.mydsl.scheme.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.scheme.Comparison;
import org.xtext.example.mydsl.scheme.SchemePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Comparison</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.scheme.impl.ComparisonImpl#getNum1 <em>Num1</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.scheme.impl.ComparisonImpl#getNum2 <em>Num2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComparisonImpl extends MinimalEObjectImpl.Container implements Comparison
{
  /**
   * The default value of the '{@link #getNum1() <em>Num1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNum1()
   * @generated
   * @ordered
   */
  protected static final String NUM1_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNum1() <em>Num1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNum1()
   * @generated
   * @ordered
   */
  protected String num1 = NUM1_EDEFAULT;

  /**
   * The default value of the '{@link #getNum2() <em>Num2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNum2()
   * @generated
   * @ordered
   */
  protected static final String NUM2_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNum2() <em>Num2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNum2()
   * @generated
   * @ordered
   */
  protected String num2 = NUM2_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComparisonImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SchemePackage.Literals.COMPARISON;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNum1()
  {
    return num1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNum1(String newNum1)
  {
    String oldNum1 = num1;
    num1 = newNum1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SchemePackage.COMPARISON__NUM1, oldNum1, num1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNum2()
  {
    return num2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNum2(String newNum2)
  {
    String oldNum2 = num2;
    num2 = newNum2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SchemePackage.COMPARISON__NUM2, oldNum2, num2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SchemePackage.COMPARISON__NUM1:
        return getNum1();
      case SchemePackage.COMPARISON__NUM2:
        return getNum2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SchemePackage.COMPARISON__NUM1:
        setNum1((String)newValue);
        return;
      case SchemePackage.COMPARISON__NUM2:
        setNum2((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SchemePackage.COMPARISON__NUM1:
        setNum1(NUM1_EDEFAULT);
        return;
      case SchemePackage.COMPARISON__NUM2:
        setNum2(NUM2_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SchemePackage.COMPARISON__NUM1:
        return NUM1_EDEFAULT == null ? num1 != null : !NUM1_EDEFAULT.equals(num1);
      case SchemePackage.COMPARISON__NUM2:
        return NUM2_EDEFAULT == null ? num2 != null : !NUM2_EDEFAULT.equals(num2);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (num1: ");
    result.append(num1);
    result.append(", num2: ");
    result.append(num2);
    result.append(')');
    return result.toString();
  }

} //ComparisonImpl
