/**
 * generated by Xtext 2.16.0
 */
package org.xtext.example.mydsl.scheme;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Expression</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.scheme.Expression#getConstant <em>Constant</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.scheme.Expression#getOper <em>Oper</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.scheme.Expression#getComp <em>Comp</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.scheme.Expression#getCond <em>Cond</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.scheme.Expression#getSet <em>Set</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.scheme.Expression#getTrig <em>Trig</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.scheme.Expression#getList <em>List</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.scheme.Expression#getListLength <em>List Length</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.scheme.Expression#getNestedOperation <em>Nested Operation</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.scheme.Expression#getCalculate <em>Calculate</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.mydsl.scheme.SchemePackage#getExpression()
 * @model
 * @generated
 */
public interface Expression extends EObject
{
  /**
   * Returns the value of the '<em><b>Constant</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Constant</em>' attribute.
   * @see #setConstant(String)
   * @see org.xtext.example.mydsl.scheme.SchemePackage#getExpression_Constant()
   * @model
   * @generated
   */
  String getConstant();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.scheme.Expression#getConstant <em>Constant</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Constant</em>' attribute.
   * @see #getConstant()
   * @generated
   */
  void setConstant(String value);

  /**
   * Returns the value of the '<em><b>Oper</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Oper</em>' containment reference.
   * @see #setOper(Operation)
   * @see org.xtext.example.mydsl.scheme.SchemePackage#getExpression_Oper()
   * @model containment="true"
   * @generated
   */
  Operation getOper();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.scheme.Expression#getOper <em>Oper</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Oper</em>' containment reference.
   * @see #getOper()
   * @generated
   */
  void setOper(Operation value);

  /**
   * Returns the value of the '<em><b>Comp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Comp</em>' containment reference.
   * @see #setComp(Comparison)
   * @see org.xtext.example.mydsl.scheme.SchemePackage#getExpression_Comp()
   * @model containment="true"
   * @generated
   */
  Comparison getComp();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.scheme.Expression#getComp <em>Comp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Comp</em>' containment reference.
   * @see #getComp()
   * @generated
   */
  void setComp(Comparison value);

  /**
   * Returns the value of the '<em><b>Cond</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Cond</em>' containment reference.
   * @see #setCond(Conditional)
   * @see org.xtext.example.mydsl.scheme.SchemePackage#getExpression_Cond()
   * @model containment="true"
   * @generated
   */
  Conditional getCond();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.scheme.Expression#getCond <em>Cond</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Cond</em>' containment reference.
   * @see #getCond()
   * @generated
   */
  void setCond(Conditional value);

  /**
   * Returns the value of the '<em><b>Set</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Set</em>' containment reference.
   * @see #setSet(Set)
   * @see org.xtext.example.mydsl.scheme.SchemePackage#getExpression_Set()
   * @model containment="true"
   * @generated
   */
  Set getSet();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.scheme.Expression#getSet <em>Set</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Set</em>' containment reference.
   * @see #getSet()
   * @generated
   */
  void setSet(Set value);

  /**
   * Returns the value of the '<em><b>Trig</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Trig</em>' containment reference.
   * @see #setTrig(Trigonometry)
   * @see org.xtext.example.mydsl.scheme.SchemePackage#getExpression_Trig()
   * @model containment="true"
   * @generated
   */
  Trigonometry getTrig();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.scheme.Expression#getTrig <em>Trig</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Trig</em>' containment reference.
   * @see #getTrig()
   * @generated
   */
  void setTrig(Trigonometry value);

  /**
   * Returns the value of the '<em><b>List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>List</em>' containment reference.
   * @see #setList(ListNumbers)
   * @see org.xtext.example.mydsl.scheme.SchemePackage#getExpression_List()
   * @model containment="true"
   * @generated
   */
  ListNumbers getList();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.scheme.Expression#getList <em>List</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>List</em>' containment reference.
   * @see #getList()
   * @generated
   */
  void setList(ListNumbers value);

  /**
   * Returns the value of the '<em><b>List Length</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>List Length</em>' containment reference.
   * @see #setListLength(ListLength)
   * @see org.xtext.example.mydsl.scheme.SchemePackage#getExpression_ListLength()
   * @model containment="true"
   * @generated
   */
  ListLength getListLength();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.scheme.Expression#getListLength <em>List Length</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>List Length</em>' containment reference.
   * @see #getListLength()
   * @generated
   */
  void setListLength(ListLength value);

  /**
   * Returns the value of the '<em><b>Nested Operation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Nested Operation</em>' containment reference.
   * @see #setNestedOperation(NestedOperation)
   * @see org.xtext.example.mydsl.scheme.SchemePackage#getExpression_NestedOperation()
   * @model containment="true"
   * @generated
   */
  NestedOperation getNestedOperation();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.scheme.Expression#getNestedOperation <em>Nested Operation</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Nested Operation</em>' containment reference.
   * @see #getNestedOperation()
   * @generated
   */
  void setNestedOperation(NestedOperation value);

  /**
   * Returns the value of the '<em><b>Calculate</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Calculate</em>' containment reference.
   * @see #setCalculate(Calculate)
   * @see org.xtext.example.mydsl.scheme.SchemePackage#getExpression_Calculate()
   * @model containment="true"
   * @generated
   */
  Calculate getCalculate();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.scheme.Expression#getCalculate <em>Calculate</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Calculate</em>' containment reference.
   * @see #getCalculate()
   * @generated
   */
  void setCalculate(Calculate value);

} // Expression
