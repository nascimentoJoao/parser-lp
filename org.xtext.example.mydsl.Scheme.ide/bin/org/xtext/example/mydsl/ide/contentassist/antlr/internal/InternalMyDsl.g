/*
 * generated by Xtext 2.16.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getProgramAssignment()); }
		(rule__Program__ProgramAssignment)*
		{ after(grammarAccess.getProgramAccess().getProgramAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForm
entryRuleForm
:
{ before(grammarAccess.getFormRule()); }
	 ruleForm
{ after(grammarAccess.getFormRule()); } 
	 EOF 
;

// Rule Form
ruleForm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormAccess().getAlternatives()); }
		(rule__Form__Alternatives)
		{ after(grammarAccess.getFormAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition
entryRuleDefinition
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAccess().getVariableDefinitionAssignment()); }
		(rule__Definition__VariableDefinitionAssignment)
		{ after(grammarAccess.getDefinitionAccess().getVariableDefinitionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDefinition
entryRuleVariableDefinition
:
{ before(grammarAccess.getVariableDefinitionRule()); }
	 ruleVariableDefinition
{ after(grammarAccess.getVariableDefinitionRule()); } 
	 EOF 
;

// Rule VariableDefinition
ruleVariableDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getAlternatives()); }
		(rule__VariableDefinition__Alternatives)
		{ after(grammarAccess.getVariableDefinitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBody
entryRuleBody
:
{ before(grammarAccess.getBodyRule()); }
	 ruleBody
{ after(grammarAccess.getBodyRule()); } 
	 EOF 
;

// Rule Body
ruleBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBodyAccess().getGroup()); }
		(rule__Body__Group__0)
		{ after(grammarAccess.getBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultipleCondition
entryRuleMultipleCondition
:
{ before(grammarAccess.getMultipleConditionRule()); }
	 ruleMultipleCondition
{ after(grammarAccess.getMultipleConditionRule()); } 
	 EOF 
;

// Rule MultipleCondition
ruleMultipleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultipleConditionAccess().getGroup()); }
		(rule__MultipleCondition__Group__0)
		{ after(grammarAccess.getMultipleConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleApplication
entryRuleApplication
:
{ before(grammarAccess.getApplicationRule()); }
	 ruleApplication
{ after(grammarAccess.getApplicationRule()); } 
	 EOF 
;

// Rule Application
ruleApplication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getApplicationAccess().getGroup()); }
		(rule__Application__Group__0)
		{ after(grammarAccess.getApplicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSet
entryRuleSet
:
{ before(grammarAccess.getSetRule()); }
	 ruleSet
{ after(grammarAccess.getSetRule()); } 
	 EOF 
;

// Rule Set
ruleSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetAccess().getGroup()); }
		(rule__Set__Group__0)
		{ after(grammarAccess.getSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditional
entryRuleConditional
:
{ before(grammarAccess.getConditionalRule()); }
	 ruleConditional
{ after(grammarAccess.getConditionalRule()); } 
	 EOF 
;

// Rule Conditional
ruleConditional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalAccess().getGroup()); }
		(rule__Conditional__Group__0)
		{ after(grammarAccess.getConditionalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstant
entryRuleConstant
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantAccess().getAlternatives()); }
		(rule__Constant__Alternatives)
		{ after(grammarAccess.getConstantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getGroup()); }
		(rule__Operation__Group__0)
		{ after(grammarAccess.getOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitial
entryRuleInitial
:
{ before(grammarAccess.getInitialRule()); }
	 ruleInitial
{ after(grammarAccess.getInitialRule()); } 
	 EOF 
;

// Rule Initial
ruleInitial 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitialAccess().getInitAssignment()); }
		(rule__Initial__InitAssignment)
		{ after(grammarAccess.getInitialAccess().getInitAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubsequent
entryRuleSubsequent
:
{ before(grammarAccess.getSubsequentRule()); }
	 ruleSubsequent
{ after(grammarAccess.getSubsequentRule()); } 
	 EOF 
;

// Rule Subsequent
ruleSubsequent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubsequentAccess().getGroup()); }
		(rule__Subsequent__Group__0)
		{ after(grammarAccess.getSubsequentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormAccess().getDefinitionAssignment_0()); }
		(rule__Form__DefinitionAssignment_0)
		{ after(grammarAccess.getFormAccess().getDefinitionAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getFormAccess().getExpressionAssignment_1()); }
		(rule__Form__ExpressionAssignment_1)
		{ after(grammarAccess.getFormAccess().getExpressionAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getGroup_0()); }
		(rule__VariableDefinition__Group_0__0)
		{ after(grammarAccess.getVariableDefinitionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getGroup_1()); }
		(rule__VariableDefinition__Group_1__0)
		{ after(grammarAccess.getVariableDefinitionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getGroup_2()); }
		(rule__VariableDefinition__Group_2__0)
		{ after(grammarAccess.getVariableDefinitionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getConstantAssignment_0()); }
		(rule__Expression__ConstantAssignment_0)
		{ after(grammarAccess.getExpressionAccess().getConstantAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getOperAssignment_1()); }
		(rule__Expression__OperAssignment_1)
		{ after(grammarAccess.getExpressionAccess().getOperAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getCondAssignment_2()); }
		(rule__Expression__CondAssignment_2)
		{ after(grammarAccess.getExpressionAccess().getCondAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getSetAssignment_3()); }
		(rule__Expression__SetAssignment_3)
		{ after(grammarAccess.getExpressionAccess().getSetAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getAppAssignment_4()); }
		(rule__Expression__AppAssignment_4)
		{ after(grammarAccess.getExpressionAccess().getAppAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getMultAssignment_5()); }
		(rule__Expression__MultAssignment_5)
		{ after(grammarAccess.getExpressionAccess().getMultAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup_1_0()); }
		(rule__Comparison__Group_1_0__0)
		{ after(grammarAccess.getComparisonAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getBOOLTerminalRuleCall_1_1()); }
		RULE_BOOL
		{ after(grammarAccess.getComparisonAccess().getBOOLTerminalRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Alternatives_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getLessThanSignKeyword_1_0_1_0()); }
		'<'
		{ after(grammarAccess.getComparisonAccess().getLessThanSignKeyword_1_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getGreaterThanSignKeyword_1_0_1_1()); }
		'>'
		{ after(grammarAccess.getComparisonAccess().getGreaterThanSignKeyword_1_0_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getEqualsSignKeyword_1_0_1_2()); }
		'='
		{ after(grammarAccess.getComparisonAccess().getEqualsSignKeyword_1_0_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getGreaterThanSignEqualsSignKeyword_1_0_1_3()); }
		'>='
		{ after(grammarAccess.getComparisonAccess().getGreaterThanSignEqualsSignKeyword_1_0_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getLessThanSignEqualsSignKeyword_1_0_1_4()); }
		'<='
		{ after(grammarAccess.getComparisonAccess().getLessThanSignEqualsSignKeyword_1_0_1_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getBOOLTerminalRuleCall_0()); }
		RULE_BOOL
		{ after(grammarAccess.getConstantAccess().getBOOLTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getINTTerminalRuleCall_1()); }
		RULE_INT
		{ after(grammarAccess.getConstantAccess().getINTTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getDOUBLETerminalRuleCall_2()); }
		RULE_DOUBLE
		{ after(grammarAccess.getConstantAccess().getDOUBLETerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getSTRINGTerminalRuleCall_3()); }
		RULE_STRING
		{ after(grammarAccess.getConstantAccess().getSTRINGTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getIDTerminalRuleCall_4()); }
		RULE_ID
		{ after(grammarAccess.getConstantAccess().getIDTerminalRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getLETTERTerminalRuleCall_5()); }
		RULE_LETTER
		{ after(grammarAccess.getConstantAccess().getLETTERTerminalRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__InitAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialAccess().getInitLETTERTerminalRuleCall_0_0()); }
		RULE_LETTER
		{ after(grammarAccess.getInitialAccess().getInitLETTERTerminalRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInitialAccess().getInitExclamationMarkKeyword_0_1()); }
		'!'
		{ after(grammarAccess.getInitialAccess().getInitExclamationMarkKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getInitialAccess().getInitDollarSignKeyword_0_2()); }
		'$'
		{ after(grammarAccess.getInitialAccess().getInitDollarSignKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getInitialAccess().getInitPercentSignKeyword_0_3()); }
		'%'
		{ after(grammarAccess.getInitialAccess().getInitPercentSignKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getInitialAccess().getInitAmpersandKeyword_0_4()); }
		'&'
		{ after(grammarAccess.getInitialAccess().getInitAmpersandKeyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getInitialAccess().getInitAsteriskKeyword_0_5()); }
		'*'
		{ after(grammarAccess.getInitialAccess().getInitAsteriskKeyword_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getInitialAccess().getInitSolidusKeyword_0_6()); }
		'/'
		{ after(grammarAccess.getInitialAccess().getInitSolidusKeyword_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getInitialAccess().getInitColonKeyword_0_7()); }
		':'
		{ after(grammarAccess.getInitialAccess().getInitColonKeyword_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getInitialAccess().getInitLessThanSignKeyword_0_8()); }
		'<'
		{ after(grammarAccess.getInitialAccess().getInitLessThanSignKeyword_0_8()); }
	)
	|
	(
		{ before(grammarAccess.getInitialAccess().getInitEqualsSignKeyword_0_9()); }
		'='
		{ after(grammarAccess.getInitialAccess().getInitEqualsSignKeyword_0_9()); }
	)
	|
	(
		{ before(grammarAccess.getInitialAccess().getInitGreaterThanSignKeyword_0_10()); }
		'>'
		{ after(grammarAccess.getInitialAccess().getInitGreaterThanSignKeyword_0_10()); }
	)
	|
	(
		{ before(grammarAccess.getInitialAccess().getInitQuestionMarkKeyword_0_11()); }
		'?'
		{ after(grammarAccess.getInitialAccess().getInitQuestionMarkKeyword_0_11()); }
	)
	|
	(
		{ before(grammarAccess.getInitialAccess().getInitTildeKeyword_0_12()); }
		'~'
		{ after(grammarAccess.getInitialAccess().getInitTildeKeyword_0_12()); }
	)
	|
	(
		{ before(grammarAccess.getInitialAccess().getInit_Keyword_0_13()); }
		'_'
		{ after(grammarAccess.getInitialAccess().getInit_Keyword_0_13()); }
	)
	|
	(
		{ before(grammarAccess.getInitialAccess().getInitCircumflexAccentKeyword_0_14()); }
		'^'
		{ after(grammarAccess.getInitialAccess().getInitCircumflexAccentKeyword_0_14()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsequent__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsequentAccess().getInitAssignment_1_0()); }
		(rule__Subsequent__InitAssignment_1_0)
		{ after(grammarAccess.getSubsequentAccess().getInitAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubsequentAccess().getDIGITTerminalRuleCall_1_1()); }
		RULE_DIGIT
		{ after(grammarAccess.getSubsequentAccess().getDIGITTerminalRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getSubsequentAccess().getFullStopKeyword_1_2()); }
		'.'
		{ after(grammarAccess.getSubsequentAccess().getFullStopKeyword_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getSubsequentAccess().getPlusSignKeyword_1_3()); }
		'+'
		{ after(grammarAccess.getSubsequentAccess().getPlusSignKeyword_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getSubsequentAccess().getHyphenMinusKeyword_1_4()); }
		'-'
		{ after(grammarAccess.getSubsequentAccess().getHyphenMinusKeyword_1_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_0__0__Impl
	rule__VariableDefinition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getVariableDefinitionAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_0__1__Impl
	rule__VariableDefinition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getDefineKeyword_0_1()); }
	'define'
	{ after(grammarAccess.getVariableDefinitionAccess().getDefineKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_0__2__Impl
	rule__VariableDefinition__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getVariableAssignment_0_2()); }
	(rule__VariableDefinition__VariableAssignment_0_2)
	{ after(grammarAccess.getVariableDefinitionAccess().getVariableAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_0__3__Impl
	rule__VariableDefinition__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getExpressionAssignment_0_3()); }
	(rule__VariableDefinition__ExpressionAssignment_0_3)
	{ after(grammarAccess.getVariableDefinitionAccess().getExpressionAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getRightParenthesisKeyword_0_4()); }
	')'
	{ after(grammarAccess.getVariableDefinitionAccess().getRightParenthesisKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_1__0__Impl
	rule__VariableDefinition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getVariableDefinitionAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_1__1__Impl
	rule__VariableDefinition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getDefineKeyword_1_1()); }
	'define'
	{ after(grammarAccess.getVariableDefinitionAccess().getDefineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_1__2__Impl
	rule__VariableDefinition__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getLeftParenthesisKeyword_1_2()); }
	'('
	{ after(grammarAccess.getVariableDefinitionAccess().getLeftParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_1__3__Impl
	rule__VariableDefinition__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getVariableAssignment_1_3()); }
	(rule__VariableDefinition__VariableAssignment_1_3)
	{ after(grammarAccess.getVariableDefinitionAccess().getVariableAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_1__4__Impl
	rule__VariableDefinition__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getVariablesAssignment_1_4()); }
	(rule__VariableDefinition__VariablesAssignment_1_4)*
	{ after(grammarAccess.getVariableDefinitionAccess().getVariablesAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_1__5__Impl
	rule__VariableDefinition__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getRightParenthesisKeyword_1_5()); }
	')'
	{ after(grammarAccess.getVariableDefinitionAccess().getRightParenthesisKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_1__6__Impl
	rule__VariableDefinition__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getBodyAssignment_1_6()); }
	(rule__VariableDefinition__BodyAssignment_1_6)
	{ after(grammarAccess.getVariableDefinitionAccess().getBodyAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_1__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_1__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getRightParenthesisKeyword_1_7()); }
	')'
	{ after(grammarAccess.getVariableDefinitionAccess().getRightParenthesisKeyword_1_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_2__0__Impl
	rule__VariableDefinition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getVariableDefinitionAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_2__1__Impl
	rule__VariableDefinition__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getDefineKeyword_2_1()); }
	'define'
	{ after(grammarAccess.getVariableDefinitionAccess().getDefineKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_2__2__Impl
	rule__VariableDefinition__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getLeftParenthesisKeyword_2_2()); }
	'('
	{ after(grammarAccess.getVariableDefinitionAccess().getLeftParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_2__3__Impl
	rule__VariableDefinition__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getVariableAssignment_2_3()); }
	(rule__VariableDefinition__VariableAssignment_2_3)
	{ after(grammarAccess.getVariableDefinitionAccess().getVariableAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_2__4__Impl
	rule__VariableDefinition__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getVariablesAssignment_2_4()); }
	(rule__VariableDefinition__VariablesAssignment_2_4)*
	{ after(grammarAccess.getVariableDefinitionAccess().getVariablesAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_2__5__Impl
	rule__VariableDefinition__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getFullStopKeyword_2_5()); }
	'.'
	{ after(grammarAccess.getVariableDefinitionAccess().getFullStopKeyword_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_2__6__Impl
	rule__VariableDefinition__Group_2__7
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getVarAssignment_2_6()); }
	(rule__VariableDefinition__VarAssignment_2_6)
	{ after(grammarAccess.getVariableDefinitionAccess().getVarAssignment_2_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_2__7__Impl
	rule__VariableDefinition__Group_2__8
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getRightParenthesisKeyword_2_7()); }
	')'
	{ after(grammarAccess.getVariableDefinitionAccess().getRightParenthesisKeyword_2_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_2__8__Impl
	rule__VariableDefinition__Group_2__9
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getBodyAssignment_2_8()); }
	(rule__VariableDefinition__BodyAssignment_2_8)
	{ after(grammarAccess.getVariableDefinitionAccess().getBodyAssignment_2_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group_2__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_2__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getRightParenthesisKeyword_2_9()); }
	')'
	{ after(grammarAccess.getVariableDefinitionAccess().getRightParenthesisKeyword_2_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__0__Impl
	rule__Body__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getDefinitionAssignment_0()); }
	(rule__Body__DefinitionAssignment_0)*
	{ after(grammarAccess.getBodyAccess().getDefinitionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBodyAccess().getExpressionAssignment_1()); }
		(rule__Body__ExpressionAssignment_1)
		{ after(grammarAccess.getBodyAccess().getExpressionAssignment_1()); }
	)
	(
		{ before(grammarAccess.getBodyAccess().getExpressionAssignment_1()); }
		(rule__Body__ExpressionAssignment_1)*
		{ after(grammarAccess.getBodyAccess().getExpressionAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getComparisonAction_0()); }
	()
	{ after(grammarAccess.getComparisonAccess().getComparisonAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getAlternatives_1()); }
	(rule__Comparison__Alternatives_1)
	{ after(grammarAccess.getComparisonAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0__0__Impl
	rule__Comparison__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getLeftParenthesisKeyword_1_0_0()); }
	'('
	{ after(grammarAccess.getComparisonAccess().getLeftParenthesisKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0__1__Impl
	rule__Comparison__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getAlternatives_1_0_1()); }
	(rule__Comparison__Alternatives_1_0_1)
	{ after(grammarAccess.getComparisonAccess().getAlternatives_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0__2__Impl
	rule__Comparison__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getNum1Assignment_1_0_2()); }
	(rule__Comparison__Num1Assignment_1_0_2)
	{ after(grammarAccess.getComparisonAccess().getNum1Assignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0__3__Impl
	rule__Comparison__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getNum2Assignment_1_0_3()); }
	(rule__Comparison__Num2Assignment_1_0_3)
	{ after(grammarAccess.getComparisonAccess().getNum2Assignment_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRightParenthesisKeyword_1_0_4()); }
	')'
	{ after(grammarAccess.getComparisonAccess().getRightParenthesisKeyword_1_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleCondition__Group__0__Impl
	rule__MultipleCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleConditionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getMultipleConditionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleCondition__Group__1__Impl
	rule__MultipleCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleConditionAccess().getCondKeyword_1()); }
	'cond'
	{ after(grammarAccess.getMultipleConditionAccess().getCondKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleCondition__Group__2__Impl
	rule__MultipleCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleConditionAccess().getGroup_2()); }
	(rule__MultipleCondition__Group_2__0)
	{ after(grammarAccess.getMultipleConditionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleCondition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleConditionAccess().getGroup_3()); }
	(rule__MultipleCondition__Group_3__0)?
	{ after(grammarAccess.getMultipleConditionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleCondition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleCondition__Group_2__0__Impl
	rule__MultipleCondition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleConditionAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getMultipleConditionAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleCondition__Group_2__1__Impl
	rule__MultipleCondition__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleConditionAccess().getCompAssignment_2_1()); }
	(rule__MultipleCondition__CompAssignment_2_1)
	{ after(grammarAccess.getMultipleConditionAccess().getCompAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleCondition__Group_2__2__Impl
	rule__MultipleCondition__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleConditionAccess().getExpAssignment_2_2()); }
	(rule__MultipleCondition__ExpAssignment_2_2)
	{ after(grammarAccess.getMultipleConditionAccess().getExpAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleCondition__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleConditionAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getMultipleConditionAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleCondition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleCondition__Group_3__0__Impl
	rule__MultipleCondition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleConditionAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getMultipleConditionAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleCondition__Group_3__1__Impl
	rule__MultipleCondition__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleConditionAccess().getElseKeyword_3_1()); }
	'else'
	{ after(grammarAccess.getMultipleConditionAccess().getElseKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleCondition__Group_3__2__Impl
	rule__MultipleCondition__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleConditionAccess().getExpressionAssignment_3_2()); }
	(rule__MultipleCondition__ExpressionAssignment_3_2)
	{ after(grammarAccess.getMultipleConditionAccess().getExpressionAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleCondition__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleConditionAccess().getRightParenthesisKeyword_3_3()); }
	')'
	{ after(grammarAccess.getMultipleConditionAccess().getRightParenthesisKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Application__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__0__Impl
	rule__Application__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getApplicationAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__1__Impl
	rule__Application__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getExpressionAssignment_1()); }
	(rule__Application__ExpressionAssignment_1)
	{ after(grammarAccess.getApplicationAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__2__Impl
	rule__Application__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getExpressionsAssignment_2()); }
	(rule__Application__ExpressionsAssignment_2)*
	{ after(grammarAccess.getApplicationAccess().getExpressionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getApplicationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Set__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group__0__Impl
	rule__Set__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getSetAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group__1__Impl
	rule__Set__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getSetKeyword_1()); }
	'set!'
	{ after(grammarAccess.getSetAccess().getSetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group__2__Impl
	rule__Set__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getConsAssignment_2()); }
	(rule__Set__ConsAssignment_2)
	{ after(grammarAccess.getSetAccess().getConsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group__3__Impl
	rule__Set__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getExpressionAssignment_3()); }
	(rule__Set__ExpressionAssignment_3)
	{ after(grammarAccess.getSetAccess().getExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getSetAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional__Group__0__Impl
	rule__Conditional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getConditionalAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional__Group__1__Impl
	rule__Conditional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAccess().getIfKeyword_1()); }
	'if'
	{ after(grammarAccess.getConditionalAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional__Group__2__Impl
	rule__Conditional__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAccess().getConditionAssignment_2()); }
	(rule__Conditional__ConditionAssignment_2)
	{ after(grammarAccess.getConditionalAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional__Group__3__Impl
	rule__Conditional__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAccess().getIftrueAssignment_3()); }
	(rule__Conditional__IftrueAssignment_3)
	{ after(grammarAccess.getConditionalAccess().getIftrueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional__Group__4__Impl
	rule__Conditional__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAccess().getElseAssignment_4()); }
	(rule__Conditional__ElseAssignment_4)?
	{ after(grammarAccess.getConditionalAccess().getElseAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getConditionalAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getOperationAssignment_0()); }
	(rule__Operation__OperationAssignment_0)
	{ after(grammarAccess.getOperationAccess().getOperationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getOperatorAssignment_1()); }
	(rule__Operation__OperatorAssignment_1)
	{ after(grammarAccess.getOperationAccess().getOperatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getSKeyword_2()); }
	'\\s'
	{ after(grammarAccess.getOperationAccess().getSKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__3__Impl
	rule__Operation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getNumbAssignment_3()); }
	(rule__Operation__NumbAssignment_3)*
	{ after(grammarAccess.getOperationAccess().getNumbAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__4__Impl
	rule__Operation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getSKeyword_4()); }
	'\\s'
	{ after(grammarAccess.getOperationAccess().getSKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__5__Impl
	rule__Operation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getNumb2Assignment_5()); }
	(rule__Operation__Numb2Assignment_5)*
	{ after(grammarAccess.getOperationAccess().getNumb2Assignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getOperationAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subsequent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsequent__Group__0__Impl
	rule__Subsequent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsequent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsequentAccess().getSubsequentAction_0()); }
	()
	{ after(grammarAccess.getSubsequentAccess().getSubsequentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsequent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsequent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsequent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsequentAccess().getAlternatives_1()); }
	(rule__Subsequent__Alternatives_1)
	{ after(grammarAccess.getSubsequentAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__ProgramAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getProgramFormParserRuleCall_0()); }
		ruleForm
		{ after(grammarAccess.getProgramAccess().getProgramFormParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__DefinitionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormAccess().getDefinitionDefinitionParserRuleCall_0_0()); }
		ruleDefinition
		{ after(grammarAccess.getFormAccess().getDefinitionDefinitionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getFormAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__VariableDefinitionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getVariableDefinitionVariableDefinitionParserRuleCall_0()); }
		ruleVariableDefinition
		{ after(grammarAccess.getDefinitionAccess().getVariableDefinitionVariableDefinitionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__VariableAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getVariableIDTerminalRuleCall_0_2_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDefinitionAccess().getVariableIDTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__ExpressionAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getExpressionExpressionParserRuleCall_0_3_0()); }
		ruleExpression
		{ after(grammarAccess.getVariableDefinitionAccess().getExpressionExpressionParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__VariableAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getVariableIDTerminalRuleCall_1_3_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDefinitionAccess().getVariableIDTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__VariablesAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getVariablesIDTerminalRuleCall_1_4_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDefinitionAccess().getVariablesIDTerminalRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__BodyAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getBodyBodyParserRuleCall_1_6_0()); }
		ruleBody
		{ after(grammarAccess.getVariableDefinitionAccess().getBodyBodyParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__VariableAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getVariableIDTerminalRuleCall_2_3_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDefinitionAccess().getVariableIDTerminalRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__VariablesAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getVariablesIDTerminalRuleCall_2_4_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDefinitionAccess().getVariablesIDTerminalRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__VarAssignment_2_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getVarIDTerminalRuleCall_2_6_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDefinitionAccess().getVarIDTerminalRuleCall_2_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__BodyAssignment_2_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getBodyBodyParserRuleCall_2_8_0()); }
		ruleBody
		{ after(grammarAccess.getVariableDefinitionAccess().getBodyBodyParserRuleCall_2_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__DefinitionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getDefinitionDefinitionParserRuleCall_0_0()); }
		ruleDefinition
		{ after(grammarAccess.getBodyAccess().getDefinitionDefinitionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getBodyAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ConstantAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getConstantConstantParserRuleCall_0_0()); }
		ruleConstant
		{ after(grammarAccess.getExpressionAccess().getConstantConstantParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__OperAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getOperOperationParserRuleCall_1_0()); }
		ruleOperation
		{ after(grammarAccess.getExpressionAccess().getOperOperationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__CondAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getCondConditionalParserRuleCall_2_0()); }
		ruleConditional
		{ after(grammarAccess.getExpressionAccess().getCondConditionalParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__SetAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getSetSetParserRuleCall_3_0()); }
		ruleSet
		{ after(grammarAccess.getExpressionAccess().getSetSetParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__AppAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getAppApplicationParserRuleCall_4_0()); }
		ruleApplication
		{ after(grammarAccess.getExpressionAccess().getAppApplicationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__MultAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getMultMultipleConditionParserRuleCall_5_0()); }
		ruleMultipleCondition
		{ after(grammarAccess.getExpressionAccess().getMultMultipleConditionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Num1Assignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getNum1NUMBERTerminalRuleCall_1_0_2_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getComparisonAccess().getNum1NUMBERTerminalRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Num2Assignment_1_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getNum2NUMBERTerminalRuleCall_1_0_3_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getComparisonAccess().getNum2NUMBERTerminalRuleCall_1_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__CompAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleConditionAccess().getCompComparisonParserRuleCall_2_1_0()); }
		ruleComparison
		{ after(grammarAccess.getMultipleConditionAccess().getCompComparisonParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__ExpAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleConditionAccess().getExpExpressionParserRuleCall_2_2_0()); }
		ruleExpression
		{ after(grammarAccess.getMultipleConditionAccess().getExpExpressionParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleCondition__ExpressionAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleConditionAccess().getExpressionExpressionParserRuleCall_3_2_0()); }
		ruleExpression
		{ after(grammarAccess.getMultipleConditionAccess().getExpressionExpressionParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getApplicationAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__ExpressionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAccess().getExpressionsExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getApplicationAccess().getExpressionsExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__ConsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetAccess().getConsConstantParserRuleCall_2_0()); }
		ruleConstant
		{ after(grammarAccess.getSetAccess().getConsConstantParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__ExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetAccess().getExpressionExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getSetAccess().getExpressionExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalAccess().getConditionComparisonParserRuleCall_2_0()); }
		ruleComparison
		{ after(grammarAccess.getConditionalAccess().getConditionComparisonParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__IftrueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalAccess().getIftrueExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionalAccess().getIftrueExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__ElseAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalAccess().getElseExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionalAccess().getElseExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__OperationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getOperationLeftParenthesisKeyword_0_0()); }
		(
			{ before(grammarAccess.getOperationAccess().getOperationLeftParenthesisKeyword_0_0()); }
			'('
			{ after(grammarAccess.getOperationAccess().getOperationLeftParenthesisKeyword_0_0()); }
		)
		{ after(grammarAccess.getOperationAccess().getOperationLeftParenthesisKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__OperatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getOperatorOPERTerminalRuleCall_1_0()); }
		RULE_OPER
		{ after(grammarAccess.getOperationAccess().getOperatorOPERTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__NumbAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getNumbNUMBERTerminalRuleCall_3_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getOperationAccess().getNumbNUMBERTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Numb2Assignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getNumb2NUMBERTerminalRuleCall_5_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getOperationAccess().getNumb2NUMBERTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__InitAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialAccess().getInitAlternatives_0()); }
		(rule__Initial__InitAlternatives_0)
		{ after(grammarAccess.getInitialAccess().getInitAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsequent__InitAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsequentAccess().getInitInitialParserRuleCall_1_0_0()); }
		ruleInitial
		{ after(grammarAccess.getSubsequentAccess().getInitInitialParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_LETTER : ('a'..'z'|'A'..'Z');

RULE_DIGIT : ('0'..'9')*;

RULE_OPER : ('+'|'-'|'*'|'/'|'expt');

RULE_BOOL : ('#t'|'#f');

RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_NUMBER : (RULE_DIGIT|RULE_DOUBLE);

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
